openapi: 3.0.0
info:
  title: Random OpenAPI 3 Spec
  version: 1.0.0
  description: A randomly generated OpenAPI 3 specification
paths:
  /example:
    get:
      summary: Example endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResponse'
components:
  schemas:
    ExampleResponse:
      type: object
      properties:
        result:
          oneOf:
            - $ref: '#/components/schemas/Success'
            - $ref: '#/components/schemas/Error'
    Success:
      type: object
      properties:
        successMessage:
          type: string
          example: Success!
    Error:
      type: object
      properties:
        errorMessage:
          type: string
          example: Error occurred!
          








openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
  description: |
    This is a sample API specification demonstrating various features of OpenAPI 3.

servers:
  - url: https://api.example.com/v1

paths:
  /users:
    get:
      summary: Get list of users
      description: Returns a list of users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        description: ID of the user to retrieve
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get user by ID
      description: Returns a single user by ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        username:
          type: string
          example: john_doe
        email:
          type: string
          format: email
          example: john.doe@example.com

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: User not found
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Success!
